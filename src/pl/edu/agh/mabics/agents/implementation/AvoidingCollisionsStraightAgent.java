//package pl.edu.agh.mabics.agents.implementation;
//
//import pl.edu.agh.mabics.agents.AbstractAgent;
//import pl.edu.agh.mabics.agents.implementation.ml.CollisionAvoidingProblemController;
//import pl.edu.agh.mabics.platform.model.PlatformRequest;
//import pl.edu.agh.mabics.platform.model.PlatformResponse;
//import rlpark.plugin.rltoys.envio.actions.Action;
//import rlpark.plugin.rltoys.envio.observations.Legend;
//import rlpark.plugin.rltoys.envio.rl.TRStep;
//import rlpark.plugin.rltoys.problems.ProblemDiscreteAction;
//
///**
// * Created with IntelliJ IDEA.
// * User: Mateusz
// * Date: 25.03.13
// * Time: 09:53
// */
//public class AvoidingCollisionsStraightAgent extends AbstractAgent {
//
//    private CollisionAvoidingProblemController collisionAvoidingProblemController;
//
//    @Override
//    public PlatformResponse getNextMove(PlatformRequest request) {
//        if(collisionAvoidingProblemController.getCurrentAction() == null){    //initial action should be made on basis of start state, that will be generated by that platform not external one
//            currentAction = collisionAvoidingProblemController.getCurrentAction();
//            collisionAvoidingProblemController.setCurrentAction(null);
//            return responseFromAction(currentAction);
//        }
//        collisionAvoidingProblemController.setCurrentState(stateFromRequest(request));
//        while(collisionAvoidingProblemController.getCurrentAction() == null){
//            try {
//                Thread.currentThread().sleep(10);
//            } catch (InterruptedException e) {
//                e.printStackTrace();
//            }
//        }
//        currentAction = collisionAvoidingProblemController.getCurrentAction();
//        collisionAvoidingProblemController.setCurrentAction(null);
//        return responseFromAction(currentAction);
//    }
//
//    @Override
//    public void onComplete() {
//    }
//}
